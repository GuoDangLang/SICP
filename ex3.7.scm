(define (make-account total passward)
  (define (withdraw x pass)
    (if (eq? pass passward)
      (if (>= total x)
	(begin (set! total (- total x)) total)
	"Insufficient funds")
      "Wrong Password!"))
  (define (deposit x pass)
    (if (eq? pass passward)
      (begin (set! total (+ total x)) total)
      "Wrong Password!"))
  (define (dispatch m)
    (cond ((eq? m 'withdraw) withdraw)
	  ((eq? m 'deposit) deposit)
	  (else "Sorry What the fuck do you want to do?")))
  dispatch)
(define (make-account1 total passward)
  (define (withdraw x)
    (if (>= total x)
      (begin (set! total (- total x)) total)
      "Insufficient funds"))
  (define (deposit x)
    (set! total (+ total x))
    total)
  (define (dispatch m pass)
    (if (eq? pass passward)
      (cond ((eq? m 'withdraw) withdraw)
	    ((eq? m 'deposit) deposit)
	    ((eq? m 'checkpass) true)
	    (else "fuck you"))
      "Wrong Password ASSHOLE!!!"))
  dispatch)
(define (make-joint acc defau new)
  (if (acc 'checkpass defau)
    (lambda (m pass)
      (if (eq? pass new)
	(acc m defau)
	"Wrong passward"))
    "Not correct pass for the account"))


